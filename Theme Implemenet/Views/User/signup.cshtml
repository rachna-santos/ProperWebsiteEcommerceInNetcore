
@{
    ViewData["Title"] = "signup";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>

    .form-group small {
        color: var(--error-color);
        position: absolute;
        bottom: 0;
        left: 0;
        visibility: hidden;
    }

    .form-group.success input {
        border-color: var(--succes-color);
    }

    .form-group.error input {
        border-color: var(--error-color);
    }

    .form-group.error small {
        visibility: visible;
    }

</style>
<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="@Url.Action("Index","User")">Home</a>
                <a class="breadcrumb-item text-dark" href="#">Shop</a>
                <a href="@Url.Action("CheckOut","User")"><span class="breadcrumb-item active">Checkout</span></a>
            </nav>
        </div>
    </div>
</div>
<div class="container-fluid">
    <form method="post" asp-action="signup" id="form" class="form">
        <ul class="errorMessages"></ul>
        <div class="row px-xl-5">
            <div class="col-lg-8">
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3"></span></h5>
                <div class="bg-light p-30 mb-5">
                    <h5>Already have an account? <a href="@Url.Action("Login","User")" style="color:black;">Sign In</a></h5><br /><br />
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label for="Name">Name</label>
                            <input type="text" name="model.UserName" id="Name" class="form-control"><br/>
                            <small style="color:red;">Error Message</small>
                        </div>
                        <div class="col-md-6 form-group">
                            <label for="Email">Email</label>
                            <input type="text" name="model.email" id="email" class="form-control"><br/>
                            <small style="color:red;">Error Message</small>
                        </div>
                        <div class="col-md-6 form-group">
                            <label for="password">Password</label>
                            <input type="text" name="model.password" id="password" class="form-control"><br/>
                            <small style="color:red;">Error Message</small>

                        </div>
                        <div class="col-md-6 form-group">
                            <label for="ConfirmPassword">ConfirmPassword</label>
                            <input type="text" name="model.ConfirmPassword" id="ConfirmPassword" class="form-control"><br/>
                            <small style="color:red;">Error Message</small>
                        </div>                        
                    </div>
              
                </div>

            </div>

            <div class="col-lg-4">
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Order Total</span></h5>
                <div class="bg-light p-30 mb-5">
                    @if (Model != null && Model.Count > 0)
                    {
                        @foreach (var item in Model)
                        {

                            <div class="border-bottom">
                                <br />
                                <h6 class="mb-3">Products</h6>
                                <div class="d-flex justify-content-between">
                                    <img src="~/@item.image" alt="" style="width: 50px;">
                                    <p>$@item.bill</p>
                                </div>

                            </div>
                        }
                    }
                    <div class="border-bottom pt-3 pb-2">
                        <div class="d-flex justify-content-between mb-3">

                            <h6>Subtotal</h6>
                            <h6>$@ViewData["TotalBill"]</h6>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h6 class="font-weight-medium">shipping</h6>
                            <h6 class="font-weight-medium">$300</h6>
                        </div>
                    </div>

                    @if (ViewData["TotalBill"] != null && ViewData["ShippingAmount"] != null)
                    {
                        decimal totalBill = (decimal)ViewData["TotalBill"];
                        decimal shippingAmount = (decimal)ViewData["ShippingAmount"];

                        <div class="pt-2">
                            <div class="d-flex justify-content-between mt-2">
                                <h5>Total</h5>
                                <h5>$@(totalBill + shippingAmount)</h5>
                            </div>
                        </div>
                    }

                </div>

                <div class="mb-5">
                    <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Payment</span></h5>
                    @*@{
                        int? userId = ViewContext.HttpContext.Request.Cookies["UserId"] != null ? int.Parse(ViewContext.HttpContext.Request.Cookies["UserId"]) : (int?)null;

                    }*@

                    <div class="bg-light p-30">

                        @if (User.Identity.IsAuthenticated)
                        {
                            @foreach (var item in ViewBag.payment)
                            {
                                <div class="form-group">
                                    <div class="custom-control custom-radio">
                                    <input type="radio" class="custom-control-input" name="PaymentTypeId" id="paypal-@item.PaymentTypeId" value="@item.PaymentTypeId">
                                    <label class="custom-control-label" for="paypal-@item.PaymentTypeId">@item.Type</label>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <h6>Cash</h6>
                        }
                        <button class="btn btn-block btn-primary font-weight-bold py-3">Place Order</button>
                        </div>                   
               </div>
            </div>
        </div>
    </form>
</div>
<script>
    const form = document.getElementById('form');
    const CustName = document.getElementById('Name');
    const email = document.getElementById('email');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('ConfirmPassword');

    // Show input error messages
    function showError(input, message) {
        const formControl = input.parentElement;
        formControl.className = 'col-md-6 form-group error';
        const small = formControl.querySelector('small');
        small.innerText = message;
    }

    // Show success color
    function showSuccess(input) {
        const formControl = input.parentElement;
        formControl.className = 'col-md-6 form-group success';
    }

    // Check email is valid
    function checkEmail(input) {
  //const re = /^[\w\.-]+[a-zA-Z\d-]+\.[a-zA-Z]{2,}$/;
  const re=/^([\w\.\+]{1,})([^\W])@@([\w]{1,})(\.[\w]{1,})+$/;
    if (input.value.trim() === '') {
        showError(input, 'Email is required');
    } else if (re.test(input.value.trim())) {
        showSuccess(input);
    } else {
        showError(input, 'Email is not valid');
    }
}
// Check password is valid
//function checkPassword(input) {
//    const password = input.value.trim();
////const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@@#$%^&*])[A-Za-z\\d!@@#$%^&*]{8,}$/;
//const re=/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@@$%^&*-]).*$/ 
//    if (password === '') {
//        showError(input, 'Password is required');
//    } else if (!re.test(password)) {
//            showError(input, 'Password must contain at least 10 characters, including  uppercase letter, lowercase letter, number, special character.');
//    } else {
//        showSuccess(input);
//    }
//}

    function checkPassword(input) {
        const password = input.value.trim();
        if (password === '') {
            showError(input, 'Password is required');
        } else if (password.length < 10) {
            showError(input, 'Password must be at least 10 characters ');
        } else {
            showSuccess(input);
        }
    }

    // Check password and confirm password match
    function checkPasswordsMatch(password, confirmPassword) {
        if (password.value === '') {
            showError(password, 'Password is required');
        } else if (password.value !== confirmPassword.value) {
            showError(confirmPassword, 'Passwords do not match');
        } else {
            showSuccess(confirmPassword);
        }
    }


    // Check required fields
    function checkRequired(inputArr) {
        inputArr.forEach(function (input) {
            if (input.value.trim() === '') {
                showError(input, `${getFieldName(input)} is required`);
            } else {
                showSuccess(input);
            }
        });
    }

    // Check input Length
    function checkLength(input, min, max) {
        if (input.value.length < min) {
            showError(input, `${getFieldName(input)} must be at least ${min} characters`);
        } else if (input.value.length > max) {
            showError(input, `${getFieldName(input)} must be less than ${max} characters`);
        } else {
            showSuccess(input);
        }
    }

    // Get FieldName
    function getFieldName(input) {
        return input.id.charAt(0).toUpperCase() + input.id.slice(1);
    }

    // Event Listeners
    form.addEventListener('submit', function (e) {
        e.preventDefault();

        const requiredElements = [CustName, email, password, confirmPassword].filter(Boolean);

        checkRequired(requiredElements);
        checkLength(CustName, 3, 15);
        checkPassword(password, 8, 25);
        checkPasswordsMatch(password, confirmPassword);

        checkEmail(email);

        if (document.querySelectorAll('.form-group.error').length > 0) {
            // If there are errors, prevent form submission
            return false;
        }

        // If no errors, submit the form
        form.submit();
    });
</script>


